name: Build grader image

on:
  push:
    branches:
      - 'assignment/**'
      - 'lab/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

jobs:

  build-grader:
    runs-on: ubuntu-20.04
    steps:
      - 
        run: |
          echo "IMAGE=ucsb/gradescope-graders" >> $GITHUB_ENV
          echo "BRANCH=$( echo ${GITHUB_REF} | cut -d/ -f3- )" >> $GITHUB_ENV
          echo "TYPE=$( echo ${GITHUB_REF} | cut -d/ -f3 )" >> $GITHUB_ENV
          echo "NUM=$( echo ${GITHUB_REF} | cut -d/ -f4 )" >> $GITHUB_ENV
      - 
        run: |
          echo "TAG=spring2023-${TYPE::2}${NUM}-${GITHUB_SHA::7}" >> $GITHUB_ENV
      - 
        name: Checkout
        uses: actions/checkout@v3
      # - run: |
      #     pwd
      #     ls -alh
      #     sudo apt-get update && sudo apt-get install -y zip unzip
      #     cp otter-grader-template/* .
      #     zip -d "${TYPE}s/${TYPE}${NUM}/autograder/autograder.zip" environment.yml requirements.txt
      #     zip "${TYPE}s/${TYPE}${NUM}/autograder/autograder.zip" setup.sh run_autograder
      - 
        name: Gradescope Dockerfile
        run: |
          mkdir -p build
          cat << EOF > build/Dockerfile
          FROM gradescope/auto-builds:ubuntu-20.04

          COPY --from=ucsb/pstat-134-234-spring-2023:9c49307 /opt/conda /opt/conda

          RUN apt-get update && \
              apt-get install -y \
                texlive-xetex texlive-fonts-recommended texlive-plain-generic && \
              apt-get clean && \
              rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
              
          COPY ${TYPE}s/${TYPE}${NUM}/autograder/${TYPE}${NUM}-autograder_*.zip /tmp/autograder.zip
          # COPY assignments/assignment1/autograder/assignment1-autograder_*.zip /tmp/autograder.zip

          # unzip autograder files
          RUN mkdir -p /autograder/source /autograder/results && \
              unzip -d /autograder/source /tmp/autograder.zip && \
              dos2unix /autograder/source/run_autograder /autograder/source/setup.sh && \
              cp /autograder/source/run_autograder /autograder/run_autograder && \
              chmod +x /autograder/run_autograder

          # setup conda environment
          # see `run_autograder` for more details
          RUN /opt/conda/bin/conda create -y --name otter-env && \
              /opt/conda/bin/conda init --all 
              # && \
              # echo "" > /autograder/source/setup.sh

          # adding conda directory to PATH
          # see `run_autograder` for more details
          ENV BASE_IMAGE ucbdsinfra/otter-grader
          EOF
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_GRADER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_GRADER_TOKEN }}
      - 
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}
      - 
        name: Grader Docker image
        run: |
          echo "Grader image: ${IMAGE}:${TAG}"
